From 45eac17c6ec065f6391322d3e9d56580fbfaa572 Mon Sep 17 00:00:00 2001
From: tr7zw <tr7zw@live.de>
Date: Sat, 8 Apr 2023 20:51:01 +0200
Subject: [PATCH] Backport to 1.19.2

---
 .github/workflows/build.yml                        |  7 -------
 .github/workflows/tag.yml                          |  4 ++++
 .../tr7zw/itemswapper/ItemSwapperSharedMod.java    |  8 ++++----
 .../dev/tr7zw/itemswapper/gui/CopyToClipboard.java |  6 +++---
 .../itemswapper/manager/SwapperResourceLoader.java | 14 +++++++-------
 .../mixin/AbstractContainerScreenMixin.java        |  2 +-
 .../tr7zw/itemswapper/overlay/EditListScreen.java  |  8 ++++----
 .../resources/resourcepacks/classic/pack.mcmeta    |  2 +-
 .../resources/resourcepacks/default/pack.mcmeta    |  2 +-
 .../java/dev/tr7zw/itemswapper/ItemSwapperMod.java |  9 ++++-----
 XTFabric/src/main/resources/fabric.mod.json        |  4 ++--
 gradle-compose.yml                                 |  2 +-
 12 files changed, 32 insertions(+), 36 deletions(-)

diff --git a/.github/workflows/build.yml b/.github/workflows/build.yml
index 26c1be7..4fe10be 100644
--- a/.github/workflows/build.yml
+++ b/.github/workflows/build.yml
@@ -25,10 +25,3 @@ jobs:
           name: Artifacts
           path: |
             XTFabric/build/libs/*
-      - name: Test Report
-        uses: dorny/test-reporter@v1
-        if: success() || failure()
-        with:
-          name: JUnit Tests
-          path: '**/build/test-results/test/TEST-*.xml'
-          reporter: java-junit        
\ No newline at end of file
diff --git a/.github/workflows/tag.yml b/.github/workflows/tag.yml
index 33abf01..9f6df99 100644
--- a/.github/workflows/tag.yml
+++ b/.github/workflows/tag.yml
@@ -29,5 +29,9 @@ jobs:
           curseforge-id: 694358
           curseforge-token: ${{ secrets.CURSEFORGE_TOKEN }}  
           loaders: fabric
+          game-versions: |
+            1.19
+            1.19.1
+            1.19.2
           name: ${{github.ref_name}} - Fabric
           files: '*Fabric/build/libs/!(*-@(dev|sources|javadoc|all)).jar'
diff --git a/Shared/src/main/java/dev/tr7zw/itemswapper/ItemSwapperSharedMod.java b/Shared/src/main/java/dev/tr7zw/itemswapper/ItemSwapperSharedMod.java
index f76a9b3..8743929 100644
--- a/Shared/src/main/java/dev/tr7zw/itemswapper/ItemSwapperSharedMod.java
+++ b/Shared/src/main/java/dev/tr7zw/itemswapper/ItemSwapperSharedMod.java
@@ -310,18 +310,18 @@ public abstract class ItemSwapperSharedMod {
                                 b -> configManager.getConfig().startOnItem = b));
 
                 getOptions().addSmall(options.toArray(new OptionInstance[0]));
-                this.addRenderableWidget(Button.builder(ComponentProvider.translatable("text.itemswapper.whitelist"), new OnPress() {
+                this.addRenderableWidget(new Button(this.width / 2 - 210, this.height - 27, 50, 20, ComponentProvider.translatable("text.itemswapper.whitelist"), new OnPress() {
                     @Override
                     public void onPress(Button button) {
                         Minecraft.getInstance().setScreen(new EditListScreen(inst, Minecraft.getInstance().options, true));
                     }
-                }).pos(this.width / 2 - 210, this.height - 27).size(50, 20).build());
-                this.addRenderableWidget(Button.builder(ComponentProvider.translatable("text.itemswapper.blacklist"), new OnPress() {
+                }));
+            	this.addRenderableWidget(new Button(this.width / 2 - 160, this.height - 27, 50, 20, ComponentProvider.translatable("text.itemswapper.blacklist"), new OnPress() {
                     @Override
                     public void onPress(Button button) {
                         Minecraft.getInstance().setScreen(new EditListScreen(inst, Minecraft.getInstance().options, false));
                     }
-                }).pos(this.width / 2 - 160, this.height - 27).size(50, 20).build());
+            	}));
             }
 
             @Override
diff --git a/Shared/src/main/java/dev/tr7zw/itemswapper/gui/CopyToClipboard.java b/Shared/src/main/java/dev/tr7zw/itemswapper/gui/CopyToClipboard.java
index bbbe6c5..cc96992 100644
--- a/Shared/src/main/java/dev/tr7zw/itemswapper/gui/CopyToClipboard.java
+++ b/Shared/src/main/java/dev/tr7zw/itemswapper/gui/CopyToClipboard.java
@@ -18,7 +18,7 @@ import dev.tr7zw.util.ComponentProvider;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.gui.components.ImageButton;
 import net.minecraft.client.renderer.GameRenderer;
-import net.minecraft.core.registries.BuiltInRegistries;
+import net.minecraft.core.Registry;
 import net.minecraft.network.chat.CommonComponents;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.world.item.Item;
@@ -69,7 +69,7 @@ public class CopyToClipboard extends ImageButton {
         RenderSystem.enableDepthTest();
         RenderSystem.enableBlend();
         // FIXME: Cursed and broken, but doesn't scale everything anymore
-        blit(poseStack, this.getX(), this.getY(), 0, this.isHovered ? 9 : 0, BUTTON_WIDTH, BUTTON_HEIGHT,
+        blit(poseStack, this.x, this.y, 0, this.isHovered ? 9 : 0, BUTTON_WIDTH, BUTTON_HEIGHT,
                 TEXTURE_WIDTH,
                 TEXTURE_HEIGHT);
         this.renderToolTip(poseStack, i, j);
@@ -83,7 +83,7 @@ public class CopyToClipboard extends ImageButton {
     }
 
     private String arrayToJson(Item[] itemArray) {
-        List<String> names = Arrays.stream(itemArray).map(is -> BuiltInRegistries.ITEM.getKey(is).toString()).toList();
+        List<String> names = Arrays.stream(itemArray).map(is -> Registry.ITEM.getKey(is).toString()).toList();
         Gson gson = new GsonBuilder().setPrettyPrinting().create();
 
         return gson.toJson(names);
diff --git a/Shared/src/main/java/dev/tr7zw/itemswapper/manager/SwapperResourceLoader.java b/Shared/src/main/java/dev/tr7zw/itemswapper/manager/SwapperResourceLoader.java
index d4db0b0..efd1b66 100644
--- a/Shared/src/main/java/dev/tr7zw/itemswapper/manager/SwapperResourceLoader.java
+++ b/Shared/src/main/java/dev/tr7zw/itemswapper/manager/SwapperResourceLoader.java
@@ -25,7 +25,7 @@ import dev.tr7zw.itemswapper.manager.itemgroups.Shortcut;
 import dev.tr7zw.itemswapper.manager.shortcuts.LinkShortcut;
 import dev.tr7zw.itemswapper.util.ItemUtil;
 import dev.tr7zw.util.ComponentProvider;
-import net.minecraft.core.registries.BuiltInRegistries;
+import net.minecraft.core.Registry;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.server.packs.resources.ResourceManager;
 import net.minecraft.server.packs.resources.SimpleJsonResourceReloadListener;
@@ -203,7 +203,7 @@ public class SwapperResourceLoader extends SimpleJsonResourceReloadListener {
             group.withIgnoreItems(new HashSet<>(Arrays.asList(ignoreItems)));
         }
         if (json.has("icon") && json.get("icon").isJsonPrimitive()) {
-            group.withIcon(BuiltInRegistries.ITEM.get(new ResourceLocation(json.get("icon").getAsString())));
+            group.withIcon(Registry.ITEM.get(new ResourceLocation(json.get("icon").getAsString())));
         }
         itemLists.add(group);
     }
@@ -246,7 +246,7 @@ public class SwapperResourceLoader extends SimpleJsonResourceReloadListener {
         }
         group.withShortcuts(processShortcuts(jsonLocation, json.get("shortcuts")));
         if (json.has("icon") && json.get("icon").isJsonPrimitive()) {
-            group.withIcon(BuiltInRegistries.ITEM.get(new ResourceLocation(json.get("icon").getAsString())));
+            group.withIcon(Registry.ITEM.get(new ResourceLocation(json.get("icon").getAsString())));
         }
         itemGroups.add(group);
     }
@@ -298,7 +298,7 @@ public class SwapperResourceLoader extends SimpleJsonResourceReloadListener {
                         : null;
                 Item icon = null;
                 if (entry.has("icon") && entry.get("icon").isJsonPrimitive()) {
-                    icon = BuiltInRegistries.ITEM.get(new ResourceLocation(entry.get("icon").getAsString()));
+                    icon = Registry.ITEM.get(new ResourceLocation(entry.get("icon").getAsString()));
                 }
                 try {
                     shortcuts.add(
@@ -320,7 +320,7 @@ public class SwapperResourceLoader extends SimpleJsonResourceReloadListener {
         object.getAsJsonArray().forEach(el -> {
             if (el.isJsonPrimitive()) {
                 ResourceLocation resourceLocation = new ResourceLocation(el.getAsString());
-                Item item = BuiltInRegistries.ITEM.get(resourceLocation);
+                Item item = Registry.ITEM.get(resourceLocation);
                 ItemEntry entry = new ItemEntry(item, null);
                 if (!itemList.contains(entry)) {
                     itemList.add(entry);
@@ -329,7 +329,7 @@ public class SwapperResourceLoader extends SimpleJsonResourceReloadListener {
             if (el.isJsonObject()) {
                 JsonObject obj = el.getAsJsonObject();
                 ResourceLocation resourceLocation = new ResourceLocation(obj.get("id").getAsString());
-                Item item = BuiltInRegistries.ITEM.get(resourceLocation);
+                Item item = Registry.ITEM.get(resourceLocation);
                 ResourceLocation link = null;
                 if(obj.has("link") && obj.get("link").isJsonPrimitive()) {
                     try {
@@ -392,7 +392,7 @@ public class SwapperResourceLoader extends SimpleJsonResourceReloadListener {
         json.getAsJsonArray().forEach(el -> {
             if (el.isJsonPrimitive()) {
                 ResourceLocation resourceLocation = new ResourceLocation(el.getAsString());
-                Item item = BuiltInRegistries.ITEM.get(resourceLocation);
+                Item item = Registry.ITEM.get(resourceLocation);
                 if (item.equals(Items.AIR)) {
                     ItemSwapperSharedMod.LOGGER.warn("Unknown item: " + el.getAsString() + " in " + jsonLocation);
                     if (pallet) {
diff --git a/Shared/src/main/java/dev/tr7zw/itemswapper/mixin/AbstractContainerScreenMixin.java b/Shared/src/main/java/dev/tr7zw/itemswapper/mixin/AbstractContainerScreenMixin.java
index 75b1272..c4ee766 100644
--- a/Shared/src/main/java/dev/tr7zw/itemswapper/mixin/AbstractContainerScreenMixin.java
+++ b/Shared/src/main/java/dev/tr7zw/itemswapper/mixin/AbstractContainerScreenMixin.java
@@ -56,7 +56,7 @@ public class AbstractContainerScreenMixin extends Screen {
     @Inject(method = "render", at = @At("TAIL"))
     private void render(PoseStack graphics, int i, int j, float f, CallbackInfo info) {
         if (copyToClipboardBtn != null) {
-            copyToClipboardBtn.setX(this.leftPos + this.imageWidth - 20);
+        	copyToClipboardBtn.x = this.leftPos + this.imageWidth - 20;
         }
     }
 }
diff --git a/Shared/src/main/java/dev/tr7zw/itemswapper/overlay/EditListScreen.java b/Shared/src/main/java/dev/tr7zw/itemswapper/overlay/EditListScreen.java
index 1eeaa0b..1c2d2aa 100644
--- a/Shared/src/main/java/dev/tr7zw/itemswapper/overlay/EditListScreen.java
+++ b/Shared/src/main/java/dev/tr7zw/itemswapper/overlay/EditListScreen.java
@@ -30,7 +30,7 @@ public class EditListScreen extends OptionsSubScreen {
 
     protected void init() {
         this.addWidget((this.selectionList = new EntrySelectionList(this.minecraft)));
-        this.addRenderableWidget(Button.builder(ComponentProvider.translatable("text.itemswapper.remove"), button -> {
+        this.addRenderableWidget(new Button(this.width / 2 - 155, this.height - 38, 150, 20, ComponentProvider.translatable("text.itemswapper.remove"), button -> {
             EntrySelectionList.ListEntry entry = this.selectionList.getSelected();
             if(entry == null) {
                 return;
@@ -42,10 +42,10 @@ public class EditListScreen extends OptionsSubScreen {
             }
             CacheManager.getInstance().writeConfig();
             this.selectionList.remove(entry);
-        }).bounds(this.width / 2 - 155, this.height - 38, 150, 20).build());
-        this.addRenderableWidget(Button.builder(CommonComponents.GUI_BACK, button -> {
+        }));
+        this.addRenderableWidget(new Button(this.width / 2 - 155 + 160, this.height - 38, 150, 20, CommonComponents.GUI_BACK, button -> {
             this.minecraft.setScreen(this.lastScreen);
-        }).bounds(this.width / 2 - 155 + 160, this.height - 38, 150, 20).build());
+        }));
         super.init();
     }
 
diff --git a/Shared/src/main/resources/resourcepacks/classic/pack.mcmeta b/Shared/src/main/resources/resourcepacks/classic/pack.mcmeta
index e2aeda5..6acef8d 100644
--- a/Shared/src/main/resources/resourcepacks/classic/pack.mcmeta
+++ b/Shared/src/main/resources/resourcepacks/classic/pack.mcmeta
@@ -1,6 +1,6 @@
 {
   "pack": {
-    "pack_format": 12,
+    "pack_format": 9,
     "description": "ItemSwapper classic palettes"
   }
 }
\ No newline at end of file
diff --git a/Shared/src/main/resources/resourcepacks/default/pack.mcmeta b/Shared/src/main/resources/resourcepacks/default/pack.mcmeta
index 792e962..ddc434c 100644
--- a/Shared/src/main/resources/resourcepacks/default/pack.mcmeta
+++ b/Shared/src/main/resources/resourcepacks/default/pack.mcmeta
@@ -1,6 +1,6 @@
 {
   "pack": {
-    "pack_format": 12,
+    "pack_format": 9,
     "description": "ItemSwapper default palettes V2"
   }
 }
\ No newline at end of file
diff --git a/XTFabric/src/main/java/dev/tr7zw/itemswapper/ItemSwapperMod.java b/XTFabric/src/main/java/dev/tr7zw/itemswapper/ItemSwapperMod.java
index fcf8356..e41d6ce 100644
--- a/XTFabric/src/main/java/dev/tr7zw/itemswapper/ItemSwapperMod.java
+++ b/XTFabric/src/main/java/dev/tr7zw/itemswapper/ItemSwapperMod.java
@@ -1,5 +1,7 @@
 package dev.tr7zw.itemswapper;
 
+import java.util.Optional;
+
 import dev.tr7zw.itemswapper.compat.MidnightControllsSupport;
 import dev.tr7zw.itemswapper.support.AmecsAPISupport;
 import dev.tr7zw.itemswapper.support.ViveCraftSupport;
@@ -14,11 +16,8 @@ import net.fabricmc.fabric.api.resource.ResourceManagerHelper;
 import net.fabricmc.fabric.api.resource.ResourcePackActivationType;
 import net.fabricmc.loader.api.FabricLoader;
 import net.fabricmc.loader.api.ModContainer;
-import net.minecraft.network.chat.Component;
 import net.minecraft.resources.ResourceLocation;
 
-import java.util.Optional;
-
 public class ItemSwapperMod extends ItemSwapperSharedMod implements ClientModInitializer {
 
     @Override
@@ -31,11 +30,11 @@ public class ItemSwapperMod extends ItemSwapperSharedMod implements ClientModIni
         // Register default resource pack
         FabricLoader.getInstance().getModContainer("itemswapper").ifPresent(
                 container -> ResourceManagerHelper.registerBuiltinResourcePack(
-                        new ResourceLocation("itemswapper", "default"), container, Component.translatable("text.itemswapper.resourcepack.default"),
+                		new ResourceLocation("itemswapper", "default"), container,
                         ResourcePackActivationType.DEFAULT_ENABLED));
         FabricLoader.getInstance().getModContainer("itemswapper").ifPresent(
                 container -> ResourceManagerHelper.registerBuiltinResourcePack(
-                        new ResourceLocation("itemswapper", "classic"), container, Component.translatable("text.itemswapper.resourcepack.classic"),
+                		new ResourceLocation("itemswapper", "classic"), container,
                         ResourcePackActivationType.NORMAL));
 
         FabricLoader.getInstance().getModContainer("midnightcontrols").ifPresent(mod -> {
diff --git a/XTFabric/src/main/resources/fabric.mod.json b/XTFabric/src/main/resources/fabric.mod.json
index cdcea0c..2e473ee 100644
--- a/XTFabric/src/main/resources/fabric.mod.json
+++ b/XTFabric/src/main/resources/fabric.mod.json
@@ -69,8 +69,8 @@
     ],
   
     "depends": {
-      "fabric-api": "*",
-      "minecraft": "1.19.3"
+      "fabric": "*",
+      "minecraft": ">=1.19 <=1.19.2"
     },
     "custom": {
       "modmenu": {
diff --git a/gradle-compose.yml b/gradle-compose.yml
index fe844c4..b54a40e 100644
--- a/gradle-compose.yml
+++ b/gradle-compose.yml
@@ -1,5 +1,5 @@
 version: '0.0.2'
-source: "https://github.com/tr7zw/ModComposeTemplate/tree/1.19.3"
+source: "https://github.com/tr7zw/ModComposeTemplate/tree/1.19.2"
 replacements:
   name: "ItemSwapper"
   id: "itemswapper"
-- 
2.32.0.windows.2

